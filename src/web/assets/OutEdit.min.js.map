{"version":3,"file":"OutEdit.min.js","sources":["../../../resources/js/OutEdit.js"],"sourcesContent":["/** global: Craft, Garnish, $ */\n\n/**\n * Create Element\n *\n * @param {string} tag\n * @param {Object} attributes\n * @param {string|array} children\n * @returns {HTMLElement}\n */\nconst h = function (tag = \"div\", attributes = {}, children = []) {\n\tconst elem = document.createElement(tag);\n\n\tfor (let [key, value] of Object.entries(attributes)) {\n\t\tif (!value) continue;\n\n\t\tif (typeof value === \"function\") {\n\t\t\tif (key === \"ref\") value(elem);\n\t\t\telse elem.addEventListener(key, value);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === \"style\")\n\t\t\tvalue = value.replace(/[\\t\\r\\n]/g, \" \").trim();\n\n\t\telem.setAttribute(key, value);\n\t}\n\n\tif (!Array.isArray(children))\n\t\tchildren = [children];\n\n\tchildren.forEach(child => {\n\t\tif (!child) return;\n\n\t\ttry {\n\t\t\telem.appendChild(child);\n\t\t} catch (_) {\n\t\t\telem.appendChild(document.createTextNode(child));\n\t\t}\n\t});\n\n\treturn elem;\n};\n\n/**\n * Create Craft Form Input\n *\n * @param config\n * @returns {HTMLElement}\n */\nconst f = function (config) {\n\treturn h(\"div\", { class: \"field\" }, [\n\t\th(\"div\", { class: \"heading\" }, [\n\t\t\th(\"label\", { for: config.id }, config.label),\n\t\t\tconfig.hasOwnProperty(\"instructions\")\n\t\t\t\t? h(\"div\", { class: \"instructions\" }, h(\"p\", {}, config.instructions))\n\t\t\t\t: null\n\t\t]),\n\t\th(\"div\", { class: \"input\" }, [\n\t\t\th(config.tag, { id: config.id, ...config.attr }, config.children || null)\n\t\t]),\n\t]);\n};\n\n// window.Out = {\n//\n// \t// Properties\n// \t// =====================================================================\n//\n// \tfieldMap: {},\n// \tintegrations: [],\n//\n// \tfields: {},\n// \tactiveFieldId: null,\n//\n// \tmodal: null,\n//\n// \theadingInput: null,\n// \ttwigInput: null,\n// \tescapeInput: null,\n// \tenabledInput: null,\n//\n// \tfieldSettings: null,\n//\n// \t// Functions\n// \t// =====================================================================\n//\n// \tinit (fieldMap, integrations) {\n// \t\tthis.fieldMap = fieldMap;\n// \t\tthis.integrations = integrations;\n//\n// \t\tthis.fieldSettings = document.getElementById(\"fieldSettings\");\n// \t\tthis.fields = JSON.parse(this.fieldSettings.value);\n// \t\tif (Array.isArray(this.fields)) this.fields = {};\n//\n// \t\tconst btns = document.getElementById(\"outFields\").getElementsByTagName(\"button\");\n// \t\tfor (let i = 0, l = btns.length; i < l; ++i)\n// \t\t\tbtns[i].addEventListener(\"click\", this.edit.bind(this));\n//\n// \t\tthis.modal = new Garnish.Modal(\n// \t\t\th(\"div\", { class: \"modal out--modal\" }, [\n// \t\t\t\th(\"div\", { class: \"body\" }, [\n// \t\t\t\t\tf({\n// \t\t\t\t\t\tlabel: \"Enabled\",\n// \t\t\t\t\t\tid: \"out_enabled\",\n// \t\t\t\t\t\ttag: \"input\",\n// \t\t\t\t\t\tattr: {\n// \t\t\t\t\t\t\ttype: \"checkbox\",\n// \t\t\t\t\t\t\tchecked: false,\n// \t\t\t\t\t\t\tref: el => { this.enabledInput = el; }\n// \t\t\t\t\t\t},\n// \t\t\t\t\t}),\n// \t\t\t\t\tf({\n// \t\t\t\t\t\tlabel: \"Column Heading\",\n// \t\t\t\t\t\tid: \"out_columnHeading\",\n// \t\t\t\t\t\ttag: \"input\",\n// \t\t\t\t\t\tattr: {\n// \t\t\t\t\t\t\tclass: \"text fullwidth\",\n// \t\t\t\t\t\t\tref: el => { this.headingInput = el; }\n// \t\t\t\t\t\t},\n// \t\t\t\t\t}),\n// \t\t\t\t\tf({\n// \t\t\t\t\t\tlabel: \"Twig\",\n// \t\t\t\t\t\tid: \"out_twig\",\n// \t\t\t\t\t\ttag: \"textarea\",\n// \t\t\t\t\t\tattr: {\n// \t\t\t\t\t\t\trows: 5,\n// \t\t\t\t\t\t\tclass: \"text fullwidth\",\n// \t\t\t\t\t\t\tref: el => { this.twigInput = el; }\n// \t\t\t\t\t\t},\n// \t\t\t\t\t\tinstructions: [\n// \t\t\t\t\t\t\t\"Code to be executed in place of the fields output. You have access to the \",\n// \t\t\t\t\t\t\th(\"code\", {}, \"element\"),\n// \t\t\t\t\t\t\t\" variable as well as all global & Craft variables.\",\n// \t\t\t\t\t\t],\n// \t\t\t\t\t}),\n// \t\t\t\t\tf({\n// \t\t\t\t\t\tlabel: \"Escape Value\",\n// \t\t\t\t\t\tid: \"out_escape\",\n// \t\t\t\t\t\ttag: \"input\",\n// \t\t\t\t\t\tattr: {\n// \t\t\t\t\t\t\ttype: \"checkbox\",\n// \t\t\t\t\t\t\tchecked: true,\n// \t\t\t\t\t\t\tref: el => { this.escapeInput = el; }\n// \t\t\t\t\t\t},\n// \t\t\t\t\t\tinstructions: \"If checked the output of the column will be escaped\",\n// \t\t\t\t\t})\n// \t\t\t\t]),\n// \t\t\t\th(\"div\", { class: \"footer\" }, [\n// \t\t\t\t\th(\"div\", { class: \"buttons right\" }, [\n// \t\t\t\t\t\th(\"button\", {\n// \t\t\t\t\t\t\tclass: \"btn\",\n// \t\t\t\t\t\t\tclick: this.cancel.bind(this),\n// \t\t\t\t\t\t}, \"Cancel\"),\n// \t\t\t\t\t\th(\"button\", {\n// \t\t\t\t\t\t\tclass: \"btn submit\",\n// \t\t\t\t\t\t\tclick: this.update.bind(this),\n// \t\t\t\t\t\t}, \"Update\"),\n// \t\t\t\t\t]),\n// \t\t\t\t]),\n// \t\t\t]),\n// \t\t\t{ autoShow: false }\n// \t\t);\n// \t},\n//\n// \tedit (e) {\n// \t\te.preventDefault();\n// \t\tthis.setValues(e.target);\n// \t\tthis.modal.show();\n// \t},\n//\n// \t// Actions\n// \t// =====================================================================\n//\n// \tsetValues (field) {\n// \t\tconst fieldKey = field.dataset.key;\n//\n// \t\tthis.activeFieldId = fieldKey;\n//\n// \t\tif (this.fields.hasOwnProperty(fieldKey)) {\n// \t\t\tconst p = this.fields[fieldKey];\n//\n// \t\t\tthis.enabledInput.checked = p.enabled;\n// \t\t\tthis.headingInput.value = p.heading;\n// \t\t\tthis.twigInput.value = p.twig;\n// \t\t\tthis.escapeInput.checked = p.escape;\n//\n// \t\t\treturn;\n// \t\t}\n//\n// \t\tconst f = this.fieldMap[fieldKey];\n//\n// \t\tthis.enabledInput.checked = false;\n// \t\tthis.headingInput.value = f.name;\n// \t\tthis.twigInput.value = `{{ element.${f.handle} }}`;\n// \t\tthis.escapeInput.checked = true;\n// \t},\n//\n// \tupdate () {\n// \t\tthis.fields[this.activeFieldId] = {\n// \t\t\tenabled: this.enabledInput.checked,\n// \t\t\theading: this.headingInput.value,\n// \t\t\ttwig: this.twigInput.value,\n// \t\t\tescape: this.escapeInput.checked,\n// \t\t};\n//\n// \t\tthis.fieldSettings.value = JSON.stringify(this.fields);\n//\n// \t\tthis.modal.hide();\n// \t},\n//\n// \tcancel () {\n// \t\tthis.modal.hide();\n// \t},\n//\n// };\n\nclass Out {\n\n\t// Properties\n\t// =========================================================================\n\n\tactiveType = \"\";\n\n\tconstructor () {\n\t\tthis.initElementTypeSwitcher();\n\t}\n\n\t// Initializers\n\t// =========================================================================\n\n\tinitElementTypeSwitcher () {\n\t\tconst elementType = document.getElementById(\"elementType\")\n\t\t\t, typeSource = document.querySelectorAll(\"[data-source-type]\")\n\t\t\t, sourcesByType = {};\n\n\t\tfor (let i = 0, l = typeSource.length; i < l; ++i)\n\t\t{\n\t\t\tconst f = typeSource[i];\n\t\t\tconst t = f.dataset.sourceType;\n\n\t\t\tconst comment = document.createComment(t)\n\t\t\t\t, input = f;\n\n\t\t\tinput.removeAttribute(\"style\");\n\n\t\t\tsourcesByType[t] = { comment, input };\n\n\t\t\tif (elementType.value !== t)\n\t\t\t\tinput.parentNode.replaceChild(comment, input);\n\t\t}\n\n\t\tthis.activeType = sourcesByType[elementType.value];\n\n\t\telementType.addEventListener(\"change\", e => {\n\t\t\tthis.activeType.input.parentNode.replaceChild(\n\t\t\t\tthis.activeType.comment,\n\t\t\t\tthis.activeType.input\n\t\t\t);\n\n\t\t\tthis.activeType = sourcesByType[e.target.value];\n\n\t\t\tthis.activeType.comment.parentNode.replaceChild(\n\t\t\t\tthis.activeType.input,\n\t\t\t\tthis.activeType.comment\n\t\t\t);\n\n\t\t\t// TODO: Update available fields\n\t\t});\n\t}\n\n}\n\nwindow.Out = Out;"],"names":["Out","activeType","initElementTypeSwitcher","elementType","document","getElementById","typeSource","querySelectorAll","sourcesByType","i","l","length","f","t","dataset","sourceType","comment","createComment","input","removeAttribute","value","parentNode","replaceChild","addEventListener","_this","e","target","window"],"mappings":"+WAyNMA,wDAKLC,WAAa,QAGPC,+GAOCC,EAAcC,SAASC,eAAe,eACzCC,EAAaF,SAASG,iBAAiB,sBACvCC,KAEMC,EAAI,EAAGC,EAAIJ,EAAWK,OAAQF,EAAIC,IAAKD,EAChD,KACOG,EAAIN,EAAWG,GACfI,EAAID,EAAEE,QAAQC,WAEdC,EAAUZ,SAASa,cAAcJ,GACpCK,EAAQN,IAELO,gBAAgB,WAERN,IAAOG,UAASE,SAE1Bf,EAAYiB,QAAUP,GACzBK,EAAMG,WAAWC,aAAaN,EAASE,QAGpCjB,WAAaO,EAAcL,EAAYiB,SAEhCG,iBAAiB,SAAU,cACjCtB,WAAWiB,MAAMG,WAAWC,aAChCE,EAAKvB,WAAWe,QAChBQ,EAAKvB,WAAWiB,SAGZjB,WAAaO,EAAciB,EAAEC,OAAON,SAEpCnB,WAAWe,QAAQK,WAAWC,aAClCE,EAAKvB,WAAWiB,MAChBM,EAAKvB,WAAWe,oBASpBW,OAAO3B,IAAMA"}
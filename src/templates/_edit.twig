{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}

{# Temp #}
{% set continueEditingUrl = "" %}
{% set nextExportUrl = "" %}
{% set isNewExport = false %}
{% set export = { id: null, title: "" } %}
{# End Temp #}

{% set fullPageForm = true %}
{% set saveShortcutRedirect = continueEditingUrl %}

{% block header %}
	{{ block('pageTitle') }}
	<div class="flex-grow"></div>
	{{ block('actionButton') }}
{% endblock %}

{% block actionButton %}
	<div class="btngroup">
		<input type="submit" class="btn submit" value="{{ 'Save'|t('app') }}">

		<div class="btn submit menubtn"></div>
		<div class="menu">
			<ul>
				<li>
					<a class="formsubmit"
				       data-redirect="{{ continueEditingUrl|hash }}">
						{{ forms.optionShortcutLabel('S') }}
						{{ "Save and continue editing"|t('app') }}
					</a>
				</li>
				<li>
					<a class="formsubmit"
				       data-redirect="{{ nextExportUrl|hash }}">
						{{ "Save and add another"|t('app') }}
					</a>
				</li>

				{% if not isNewExport %}
					<li>
						<a class="formsubmit" data-param="duplicate"
					       data-value="1"
					       data-redirect="{{ (continueEditingUrl~'#')|hash }}">
							{{ "Save as a new export"|t('app') }}
						</a>
					</li>
				{% endif %}
			</ul>
			{% if not isNewExport %}
				<hr>
				<ul>
					<li>
						<a class="formsubmit error"
					       data-action="out/out/delete"
					       data-confirm="{{ 'Are you sure you want to delete this export?'|t('app') }}"
					       data-redirect="{{ 'out#'|hash }}">
							{{ 'Delete'|t('app') }}
						</a>
					</li>
				</ul>
			{% endif %}
		</div>
	</div>
{% endblock %}

{% js %}
const out_BaseDrag = Craft.FieldLayoutDesigner.BaseDrag
	, out_TabDrag = Craft.FieldLayoutDesigner.TabDrag
	, out_FieldDrag = Craft.FieldLayoutDesigner.FieldDrag;

Craft.FieldLayoutDesigner = Craft.FieldLayoutDesigner.extend({

	initField: function ($field) {
		var $editBtn = $field.find('.settings'),
			$menu = $('<div class="menu" data-align="center"/>').insertAfter($editBtn),
			$ul = $('<ul/>').appendTo($menu);

		$('<li><a data-action="edit">' + Craft.t('app', 'Edit') + '</a></li>').appendTo($ul);
		$('<li><a data-action="remove">' + Craft.t('app', 'Remove') + '</a></li>').appendTo($ul);

		new Garnish.MenuBtn($editBtn, {
			onOptionSelect: $.proxy(this, 'onFieldOptionSelect')
		});
	},

	onFieldOptionSelect: function (option) {
		var $option = $(option),
			$field = $option.data('menu').$anchor.parent(),
			action = $option.data('action');

		switch (action) {
			case 'edit': {
				window.Out.edit($field[0]);
				break;
			}
			case 'remove': {
				this.removeField($field);
				break;
			}
		}
	},

});

Craft.FieldLayoutDesigner.BaseDrag = out_BaseDrag;
Craft.FieldLayoutDesigner.TabDrag = out_TabDrag;
Craft.FieldLayoutDesigner.FieldDrag = out_FieldDrag;

Out.init({{ fields|json_encode|raw }});
{% endjs %}

{% block content %}
	<input type="hidden" name="action" value="out/out/save">
	{{ redirectInput('out') }}

	{% if export.id %}
		<input type="hidden" name="exportId" value="{{ export.id }}">
	{% endif %}

	<div id="fields">
		{{ forms.textField({
			label: "Title"|t('app'),
			id: 'title',
			name: 'title',
			value: export.title,
			first: true,
			autofocus: true,
			required: true,
			maxlength: 255
		}) }}
		{# errors: export.getErrors('title'), #}

		<div>
			{% include "_includes/fieldlayoutdesigner" with {
				customizableTabs: false,
				pretendTabName: "Columns",
				fieldLayout: craft.app.fields.getLayoutByType('out\\elements\\Export')
			} only %}
		</div>

		{# TODO: Pre-fill w/ previous value #}
		<input type="hidden" name="fieldSettings" id="fieldSettings" value="{}">
	</div>

{% endblock %}

{% block details %}
	<div id="settings" class="meta">
		{{ forms.selectField({
			label: 'Element Type'|t('app'),
			id: 'elementType',
			name: 'elementType',
			options: elementTypes
		}) }}

		{% for type, sources in elementSources %}
			{% set config = {
				label: 'Element Source',
				id: 'elementSource-' ~ type|replace('\\', '_'),
				name: 'elementSource',
				options: sources,
			} %}
			{% embed '_includes/forms/field' with config|merge({
				input: forms.select(config)
			}) %}
				{% block attr -%}
					data-source-type="{{ type }}"
					{%- if not loop.first %} style="display:none"{% endif -%}
				{%- endblock %}
			{% endembed %}
		{% endfor %}

		{{ forms.textField({
			label: 'Search Query',
			id: 'searchQuery',
			name: 'searchQuery',
		}) }}

		{{ forms.textField({
			label: 'Limit',
			id: 'limit',
			name: 'limit',
			type: 'number',
			min: 1,
			placeholder: 'Unlimited',
		}) }}

		{{ forms.dateField({
			label: 'Start Date',
			id: 'startDate',
			name: 'startDate',
		}) }}

		{{ forms.dateField({
			label: 'End Date',
			id: 'endDate',
			name: 'endDate',
		}) }}
	</div>

	{% if export.id %}
		<div class="meta read-only">
			<div class="data">
				<h5 class="heading">{{ "Date Created"|t('app') }}</h5>
				<div class="value">{{ export.dateCreated|datetime('short') }}</div>
			</div>
			<div class="data">
				<h5 class="heading">{{ "Date Updated"|t('app') }}</h5>
				<div class="value">{{ export.dateUpdated|datetime('short') }}</div>
			</div>
		</div>
	{% endif %}
{% endblock %}